{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CommentSection = function CommentSection(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      comments = _React$useState4[0],\n      addComment = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      new_comment = _React$useState6[0],\n      setComment = _React$useState6[1];\n\n  function handleComment() {\n    var newlist = comments.concat({\n      'item': text\n    });\n    addComment(newlist);\n  }\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(Text, {\n        children: \"Hi\"\n      }), comments.map(function (comment, id) {\n        return _jsx(Text, {\n          children: comment.item\n        }, id);\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: onChangeText,\n        value: text,\n        placeholder: \"What do you want to know?\"\n      }), _jsx(Button, {\n        onPress: handleComment,\n        title: \"Post\",\n        color: \"#841584\",\n        accessibilityLabel: \"Learn more about this purple button\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default CommentSection;","map":{"version":3,"sources":["C:/Users/camer/Documents/GitHub/pollish-rn/screens/CommentSection.js"],"names":["React","useState","useEffect","CommentSection","props","text","onChangeText","comments","addComment","new_comment","setComment","handleComment","newlist","concat","flex","map","comment","id","item","styles","input","StyleSheet","create","height","margin","borderWidth","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAE9B,wBAA6BJ,KAAK,CAACC,QAAN,CAAe,EAAf,CAA7B;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,YAAb;;AACA,yBAA+BN,KAAK,CAACC,QAAN,CAAe,EAAf,CAA/B;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,UAAjB;;AACA,yBAAkCR,KAAK,CAACC,QAAN,EAAlC;AAAA;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,UAApB;;AAEA,WAASC,aAAT,GAAwB;AACpB,QAAMC,OAAO,GAAGL,QAAQ,CAACM,MAAT,CAAgB;AAAC,cAAQR;AAAT,KAAhB,CAAhB;AACAG,IAAAA,UAAU,CAACI,OAAD,CAAV;AACH;;AAED,SACI,MAAC,IAAD;AAAA,eACA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG;AACVE,QAAAA,IAAI,EAAE;AADI,OAAd;AAAA,iBAGI,KAAC,IAAD;AAAA;AAAA,QAHJ,EAIKP,QAAQ,CAACQ,GAAT,CAAa,UAACC,OAAD,EAAUC,EAAV,EAAiB;AAC3B,eAAO,KAAC,IAAD;AAAA,oBAAkBD,OAAO,CAACE;AAA1B,WAAaD,EAAb,CAAP;AACH,OAFA,CAJL;AAAA,MADA,EAUA,MAAC,IAAD;AAAA,iBACA,KAAC,SAAD;AACA,QAAA,KAAK,EAAEE,MAAM,CAACC,KADd;AAEA,QAAA,YAAY,EAAEd,YAFd;AAGA,QAAA,KAAK,EAAED,IAHP;AAIA,QAAA,WAAW,EAAC;AAJZ,QADA,EAOJ,KAAC,MAAD;AACA,QAAA,OAAO,EAAEM,aADT;AAEA,QAAA,KAAK,EAAC,MAFN;AAGA,QAAA,KAAK,EAAC,SAHN;AAIA,QAAA,kBAAkB,EAAC;AAJnB,QAPI;AAAA,MAVA;AAAA,IADJ;AA2BH,CAtCD;;AAwCA,IAAMQ,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,KAAK,EAAE;AACLG,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ;AADsB,CAAlB,CAAf;AASA,eAAevB,cAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text, Dimensions, TextInput, Image, StyleSheet, Button} from 'react-native';\r\n\r\nconst CommentSection = (props) => {\r\n\r\n    const [text, onChangeText] = React.useState(\"\");\r\n    const [comments, addComment] = React.useState([]);\r\n    const [new_comment, setComment] = React.useState();\r\n\r\n    function handleComment(){\r\n        const newlist = comments.concat({'item': text})\r\n        addComment(newlist);\r\n    }\r\n\r\n    return (\r\n        <View>\r\n        <View style ={{\r\n            flex: 1\r\n        }}>\r\n            <Text>Hi</Text>\r\n            {comments.map((comment, id) => {\r\n                return <Text key = {id}>{comment.item}</Text>\r\n            })}\r\n            \r\n        </View>\r\n        <View>\r\n        <TextInput\r\n        style={styles.input}\r\n        onChangeText={onChangeText}\r\n        value={text}\r\n        placeholder=\"What do you want to know?\"\r\n        />\r\n    <Button\r\n    onPress={handleComment}\r\n    title=\"Post\"\r\n    color=\"#841584\"\r\n    accessibilityLabel=\"Learn more about this purple button\"\r\n    />\r\n    </View>\r\n    </View>\r\n        )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n      height: 40,\r\n      margin: 12,\r\n      borderWidth: 1,\r\n      padding: 10,\r\n    },\r\n  });\r\n\r\nexport default CommentSection;"]},"metadata":{},"sourceType":"module"}