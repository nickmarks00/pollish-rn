{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport uuid from 'react-native-uuid';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar dimensions = Dimensions.get(\"screen\");\n\nvar CommentSection = function CommentSection(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      comments = _React$useState4[0],\n      addComment = _React$useState4[1];\n\n  function handleComment() {\n    var newlist = comments.concat({\n      'item': text,\n      'idx': uuid.v4()\n    });\n    addComment(newlist);\n  }\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      style: {\n        borderWidth: 2,\n        borderRadius: 20,\n        padding: 10,\n        marginVertical: 8\n      },\n      children: _jsx(Text, {\n        style: {\n          marginHorizontal: 5\n        },\n        children: item.item\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: {\n        height: dimensions.height * 0.1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-evenly'\n      },\n      children: [_jsx(Text, {\n        children: \"hi\"\n      }), _jsx(Text, {\n        children: \"hi\"\n      }), _jsx(Text, {\n        children: \"hi\"\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(FlatList, {\n        data: comments,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(comment) {\n          return comment.idx;\n        }\n      })\n    }), _jsxs(View, {\n      style: {\n        justifyContent: 'flex-end',\n        marginBottom: 36\n      },\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: onChangeText,\n        value: text,\n        placeholder: \"What do you want to know?\"\n      }), _jsx(Button, {\n        onPress: handleComment,\n        title: \"Post\",\n        color: \"#841584\",\n        accessibilityLabel: \"Learn more about this purple button\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default CommentSection;","map":{"version":3,"sources":["C:/Users/camer/Documents/GitHub/pollish-rn/screens/CommentSection.js"],"names":["React","useState","useEffect","uuid","dimensions","Dimensions","get","CommentSection","props","text","onChangeText","comments","addComment","handleComment","newlist","concat","v4","renderItem","item","borderWidth","borderRadius","padding","marginVertical","marginHorizontal","flex","height","flexDirection","alignItems","justifyContent","comment","idx","marginBottom","styles","input","StyleSheet","create","margin"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text, Dimensions, TextInput, Image, StyleSheet, Button, ScrollView, FlatList} from 'react-native';\r\nimport uuid from 'react-native-uuid'\r\n\r\nconst dimensions = Dimensions.get(\"screen\");\r\n\r\nconst CommentSection = (props) => {\r\n\r\n    const [text, onChangeText] = React.useState(\"\");\r\n    const [comments, addComment] = React.useState([]);\r\n\r\n    function handleComment(){\r\n        const newlist = comments.concat({'item': text, 'idx': uuid.v4()})\r\n        addComment(newlist);\r\n    }\r\n\r\n    const renderItem = ({ item }) => (\r\n        <View style={{\r\n            borderWidth: 2,\r\n            borderRadius: 20,\r\n            padding: 10,\r\n            marginVertical: 8,\r\n            }}>\r\n            <Text style ={{\r\n                marginHorizontal: 5\r\n            }}>\r\n                {item.item}\r\n            </Text>\r\n        </View>\r\n    )\r\n\r\n    return (\r\n        <View style ={{flex: 1}}>\r\n            <View style={{\r\n                height: dimensions.height*0.1,\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-evenly'\r\n            }}>\r\n                <Text>hi</Text>\r\n                <Text>hi</Text>\r\n                <Text>hi</Text>\r\n            </View>\r\n            <View style ={{\r\n                flex: 1\r\n            }}>\r\n                <FlatList\r\n                    data={comments}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={comment => comment.idx}\r\n                />\r\n                \r\n            </View>\r\n            <View style ={{\r\n                justifyContent: 'flex-end',\r\n                marginBottom: 36\r\n            }}>\r\n                <TextInput\r\n                style={styles.input}\r\n                onChangeText={onChangeText}\r\n                value={text}\r\n                placeholder=\"What do you want to know?\"\r\n                />\r\n                <Button\r\n                onPress={handleComment}\r\n                title=\"Post\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n                />\r\n            </View>\r\n    </View>\r\n        )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n      height: 40,\r\n      margin: 12,\r\n      borderWidth: 1,\r\n      padding: 10,\r\n    },\r\n  });\r\n\r\nexport default CommentSection;"]},"metadata":{},"sourceType":"module"}