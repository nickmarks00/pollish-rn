{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BASE_URL = 'http://192.168.1.140:8000';\n\nvar CreatePollScreen = function CreatePollScreen(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      text2 = _React$useState4[0],\n      onChangeText2 = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      text3 = _React$useState6[0],\n      onChangeText3 = _React$useState6[1];\n\n  var postPollToAPI = function postPollToAPI() {\n    var url, res;\n    return _regeneratorRuntime.async(function postPollToAPI$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = BASE_URL + \"/polls/\";\n            setLoading(true);\n            res = fetch(url, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({})\n            }).then(function (res) {\n              return res.text();\n            }).then(function (data) {\n              setPosts(data);\n              setLoading(false);\n            }).catch(function (error) {\n              console.error(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        fontFamily: 'System',\n        fontWeight: 'bold',\n        marginVertical: 15\n      },\n      children: \"Question\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeText,\n      value: text,\n      placeholder: \"What do you want to know?\"\n    }), _jsx(Text, {\n      style: {\n        fontFamily: 'System',\n        fontWeight: 'bold',\n        marginVertical: 15\n      },\n      children: \"Option 1\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeText2,\n      value: text2,\n      placeholder: \"Enter an option\"\n    }), _jsx(Text, {\n      style: {\n        fontFamily: 'System',\n        fontWeight: 'bold',\n        marginVertical: 15\n      },\n      children: \"Option 2\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeText3,\n      value: text3,\n      placeholder: \"Enter an option\"\n    }), _jsx(Button, {\n      onPress: onChangeText,\n      title: \"Post\",\n      color: \"#841584\",\n      accessibilityLabel: \"Learn more about this purple button\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default CreatePollScreen;","map":{"version":3,"sources":["C:/Users/camer/Documents/GitHub/pollish-rn/screens/CreatePollScreen.js"],"names":["React","useState","useEffect","BASE_URL","CreatePollScreen","props","text","onChangeText","text2","onChangeText2","text3","onChangeText3","postPollToAPI","url","setLoading","res","fetch","method","headers","body","JSON","stringify","then","data","setPosts","catch","error","console","fontFamily","fontWeight","marginVertical","styles","input","StyleSheet","create","height","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text, Dimensions, Image, Button, TextInput, StyleSheet} from 'react-native';\r\n\r\nconst BASE_URL = 'http://192.168.1.140:8000';\r\n\r\nconst CreatePollScreen = (props) => {\r\n    const [text, onChangeText] = React.useState(\"\");\r\n    const [text2, onChangeText2] = React.useState(\"\");\r\n    const [text3, onChangeText3] = React.useState(\"\");\r\n\r\n    const postPollToAPI = async () => {\r\n        const url = `${BASE_URL}/polls/`;\r\n    \r\n        setLoading(true);\r\n    \r\n        const res = fetch(url, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n\r\n          })\r\n        })\r\n          .then(res => res.text())\r\n          .then(data => {\r\n            setPosts(data);\r\n            setLoading(false);\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      };\r\n\r\n    return (\r\n        <View>\r\n            <Text\r\n                style={{\r\n                    fontFamily: 'System',\r\n                    fontWeight: 'bold',\r\n                    marginVertical: 15\r\n                }}>Question</Text>\r\n            <TextInput\r\n            style={styles.input}\r\n            onChangeText={onChangeText}\r\n            value={text}\r\n            placeholder=\"What do you want to know?\"\r\n            />\r\n            <Text\r\n                style={{\r\n                    fontFamily: 'System',\r\n                    fontWeight: 'bold',\r\n                    marginVertical: 15\r\n                }}>Option 1</Text>\r\n            <TextInput\r\n            style={styles.input}\r\n            onChangeText={onChangeText2}\r\n            value={text2}\r\n            placeholder=\"Enter an option\"\r\n            />\r\n            <Text\r\n                style={{\r\n                    fontFamily: 'System',\r\n                    fontWeight: 'bold',\r\n                    marginVertical: 15\r\n                }}>Option 2</Text>\r\n            <TextInput\r\n            style={styles.input}\r\n            onChangeText={onChangeText3}\r\n            value={text3}\r\n            placeholder=\"Enter an option\"\r\n            />\r\n            <Button\r\n            onPress={onChangeText}\r\n            title=\"Post\"\r\n            color=\"#841584\"\r\n            accessibilityLabel=\"Learn more about this purple button\"\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n      height: 40,\r\n      margin: 12,\r\n      borderWidth: 1,\r\n      padding: 10,\r\n    },\r\n  });\r\n  \r\n\r\nexport default CreatePollScreen;"]},"metadata":{},"sourceType":"module"}